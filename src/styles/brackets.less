/*
 * Copyright (c) 2012 Adobe Systems Incorporated. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

/*
 * This file first imports all of the shared LESS/CSS, and then defines
 * version-specific layout (e.g. layout for the App shell, or layout for
 * the In-Browser version on Firefox).
 *
 * Going forward, we may have different versions of this file for different
 * Versions (e.g. App, In-Browser, etc.)
 *
 * Anything that is general/reusable should be pushed up into a LESS file
 * in the "styles" directory. See "brackets_shared.less" for the organization
 *
 * Date: @DATE
 */

/* IMPORTANT: importing brackets_shared should be the first step in this file
 * This is so that imported CSS files (NOT LESS files) end up in the
 * right place
 */
@import "brackets_shared.less";

/* Overall layout */

html, body {
    height: 100%;
    overflow: hidden;

    /* Turn off selection for UI elements */
    .user-select(none);

    /* And make sure we get a pointer cursor even over text */
    cursor: default;

    /* Turn off subpixel antialiasing on Mac since it flickers during animations. */
    -webkit-font-smoothing: antialiased;

    /* This is a hack to avoid flicker when animations (like inline editors) that use the GPU complete.
       It seems that we have to put it here rather than on the animated element in order to prevent the
       entire window from flashing.
       See: http://stackoverflow.com/questions/3461441/prevent-flicker-on-webkit-transition-of-webkit-transform
    */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.resizing-container {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: @z-index-brackets-panel-resizer;

    &.horz-resizing {
        cursor: col-resize;
    }

    &.vert-resizing {
        cursor: row-resize;
    }
}

a, img {
    -webkit-user-drag: none;
}

.main-view {
    background: @background-color-3; // to keep the theme background consistent
    height: 100%;

    .sidebar {
        height: 100%;
        .vbox;
        width: @sidebar-width;  // changed dynamically via Resizer
        position: absolute;
        left: 0;
        top: 0;
    }

    .content {
        height: 100%;
        position: absolute;
        padding: 0;
        top: 0;
        left: @sidebar-width;  // changed dynamically via Resizer
        right: @main-toolbar-width;
    }
}

#titlebar, .modal-bar {
    border-bottom: 1px solid @tc-gray-panel-border;
    box-shadow: @tc-small-shadow-bottom;

    // Make sure the bottom box-shadow goes above the editor (position: relative needed to start a new stacking group)
    position: relative;
    z-index: @z-index-brackets-toolbar;
}

.busyCursor {
    cursor: wait !important;
}

#status-bar {
    position: relative;
    background: #fff;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    box-sizing: border-box;
    color: @tc-text;
    font-family: @sansFontFamily;
    font-size: 11px;
    line-height: 25px;
    height: 26px;
    overflow: hidden;
}

#status-info {
    color: @tc-text;
    left: 10px;
    position: absolute;
    white-space: nowrap;

    div {
        display: inline;
    }
}

#status-file {
    color: #999;
}

#status-indicators {
    background: #fff;
    color: @tc-text;
    position: absolute;
    right: 0;
    text-align: right;
    white-space: nowrap;

    > div {
        border-left: 1px solid rgba(0, 0, 0, 0.1);
        float: right;
        padding: 0 10px;
    }
    .spinner {  // spinner is tiny & usually invisible; reduce margin so gap is less glaring
        border: none;
        margin: 6px 10px;
        padding: 0;
    }

    #status-language {
        border-right: 1px solid rgba(0, 0, 0, 0.1);
    }
}

@-webkit-keyframes spinner-sprites-12 {
      0% { background-position:    0px 0px; }
    100% { background-position: -120px 0px; }
}
@-webkit-keyframes spinner-sprites-36 {
      0% { background-position:    0px 0px; }
    100% { background-position: -360px 0px; }
}

#status-indent > * {
    display: inline-block;
}

#status-indent > *.hidden {
    display: none;
}

#indent-type, #indent-width-label {
    cursor: pointer;
    margin-right: 3px;
}

#indent-type:hover, #indent-width-label:hover {
    text-decoration: underline;
}

#indent-width-input {
    font-size: 11px;
    font-weight: @font-weight-semibold;
    height: 13px;
    line-height: 1;
    vertical-align: middle;
    color: @tc-text;
    margin: 0;
    padding: 0 3px 2px;
    position: relative;
    left: 0;
    top: -1px;
    width: 6px;
    transition: 0.1s linear all;
}

#indent-width-input:focus {

}

#indent-width-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

#editor-holder {
    position: relative;

    /* Placeholder shown when there is no editor open */
    #not-editor {
        height: 100%;
        .vbox;
        .box-pack(center);
        .box-align(center);
        background: @background-color-3 url('images/no_content_bg.svg') no-repeat center 45%;
    }

    /* Image Preview */
    #image-holder {
        overflow: hidden;
        position: absolute;
        top: 0px;
        right: 0px;
        bottom: 0px;
        left: 0px;
        text-align: center;
        display: none;
        #img-centering {
            display: inline-block;
            vertical-align: middle;
            margin-top: -50px; /* Offset as vertical align takes image metadata into account */
            max-width: 90%;
            max-height: 90%;
        }
        #img-data {
            font-weight: @font-weight-semibold;
        }
    }
    
    #image-holder:before {
        content: '';
        display: inline-block;
        height: 100%;
        margin-right: -0.25em; /* Adjusts for spacing */
        vertical-align: middle;
    }
    
    #img-preview {
        background: url(images/preview_bg.png);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.36);
        max-height: 90%;
    }

    #img-header {
        display: block;
        width: 100%;
        height: 38px;
        margin-bottom: 15px;
    }
    
    #img-data,
    #img-path {
        text-align: left;
        .user-select(text);
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;        
    }
    
    #img-data::selection,
    #img-path::selection {
        background: @selection-color-focused;
    }
    
    #img {
        position: relative;
    }
    
    .img-guide,
    #img-preview {
        cursor: none;
    }

    #img-scale {
        display: block;
        position: absolute;
        top: 5px;
        left: 5px;
        width: 40px;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.8);
        color: #fff;
        border-radius: 3px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    }
    
    #img-tip {
        display: block;
        position: absolute;
        text-align: left;
        white-space: nowrap;
        padding: 6px 9px;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.8);
        font-size: 11px;
        font-family: SourceCodePro;
        line-height: 13px;
        border-radius: 3px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.24);
    }
    
    #x-value,
    #y-value {
        text-align: right;
    }
    
    .tip-container {
        border: 0;
    }
    
    #horiz-guide {
        background-image: url("images/horizontal-dash.svg");
        background-repeat: repeat-x;
        width: 8px;
        height: 1px;
    }

    #vert-guide {
        background-image: url("images/vertical-dash.svg");
        background-repeat: repeat-y;
        width: 1px;
        height: 8px;
    }
    
    #horiz-guide,
    #vert-guide {
        position: absolute;
        display: block;
    }
}

.vert-resizer {
    position: absolute;
    height: 6px;
    width: 100%;
    z-index: @z-index-brackets-panel-resizer;
    opacity: 0;
    cursor: row-resize;
}

.horz-resizer {
    position: absolute;
    height: 100%;
    width: 6px;
    z-index: @z-index-brackets-panel-resizer;
    opacity: 0;
    cursor: col-resize;
}

.bottom-panel {
    background-color: @tc-gray-panel;
    display: none;
    height: 200px;
    border-top-style: solid;
    border-width: 1px;
    border-color: @tc-gray-panel-border;

    .check-all {
        margin: 7px 15px 7px 7px;
    }

    .toolbar {
        background-color: @tc-gray-panel-top-bar;
        border-bottom: @tc-gray-panel-top-bar-shadow;
        height: auto;
        padding-top: (@base-padding / 2);
        padding-bottom: (@base-padding / 2);
        z-index: @z-index-brackets-results-panel;
        box-shadow: @tc-gray-panel-bevel, @tc-small-shadow-top;
        .title {
            color: @tc-text;
            font-size: @label-font-size;
            font-weight: @font-weight-semibold;
        }
        .close {
            position: absolute;
            right: 10px;

            // vertically centers close button
            top: 50%;
            margin-top: -10px;
        }
    }

    .table-container {
        height: 170px;
        overflow: auto;

        .highlight {
            background: @bc-white;
            border-radius: 2px;
        }

        tr.selected td {
            background-color: @tc-selected-row;
            color: @bc-black;
        }
    }
}

.bottom-panel-table {
    td {
        font-size: 12px;
        padding-left: 15px;
        padding-right: 0;
        vertical-align: baseline;
    }

    .file-section > td {
        padding-left: 5px;
    }

    .line-number {
        color: @tc-light-weight-quiet-text;
        font-family: SourceCodePro;
        font-size: 11px;
        padding: 4px 0 0 15px;
        text-align: right;
        white-space: nowrap;
        width: 5px;
    }

    .dialog-filename {
        font-size: 13px;
        font-weight: @font-weight-semibold;
    }

    .dialog-path {
        font-size: 11px;
        font-weight: normal;
    }

    .line-text {
        width: 100%;
    }
}


#update-notification {
    .sprite-icon(0, 0, 24px, 24px, "images/updateSprites.svg");
}

#toolbar-go-live {
    // background-position is 0 0 for 24x24 icons
    // Default icon is for the 'disconnected' state
    // The 'connecting failed' (.warning) state also maps here
    .sprite-icon(0, 0, 24px, 24px, "images/live_development_sprites.svg");
    // 'Connected' state
    &.success {
        .sprite-swap(0, 24px);
    }
    // 'Connection in progress' state
    &.info {
        .sprite-swap(0, 48px);
    }
    // 'Out-of-sync' state
    &.out-of-sync {
        .sprite-swap(0, 72px);
    }
    // 'sync-error'
    &.sync-error {
        .sprite-swap(0, 96px);
    }
}

#toolbar-extension-manager {
    .sprite-icon(0, 0, 24px, 24px, "images/topcoat-plugin-20.svg");
}

/* Project panel */

#working-set-header {
    height: 19px;
    padding: 10px 0 9px 12px;
    background: #3C3F41;
    color: @project-panel-text-2;
    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.5);
    overflow: hidden;
}

#sidebar {
    position: relative;
    white-space: nowrap;
}

#sidebar-resizer {
    position: absolute;
    width: 6px;
    height: 100%;
    z-index: @z-index-brackets-sidebar-resizer;
    opacity: 0;
    cursor: col-resize;
}

#project-files-header {
    border-top: 1px solid #56595a;
    padding: 8px 0 9px 12px;
    font-size: 13px;
    color: @project-panel-text-2;
    overflow: hidden;
}

#open-files-container {
    .box-flex(0);
    background: #3C3F41;
    padding: 0px;
    max-height: 200px; // TODO (Issue #276): it would be nicer to have this be 50%, but that doesn't seem to work


    ul {
        list-style-type: none;
        margin: 0;
        padding-bottom: 23px;
    }

    li {
        position: relative; // so that children can be positioned absolute
        line-height: 18px;
        padding: 0 0 0 8px;
        min-height: 18px;
        vertical-align: baseline;

        &.selected a {
            color: @open-working-file-name-highlight;
        }

        &.selected .extension {
            color: @open-working-file-ext-highlight;
        }
    }

    a {
        color: #fff;

        font-size: 13px;
        text-decoration: none;

        display: block;
        height: 16px;
        line-height: 15px;
        margin-left: 18px;
        padding: 3px (@sidebar-triangle-size * 2) 3px 0;

        cursor: default;

        .directory {
            font-size: 11px;
        }
    }

    .extension, .directory {
        color: @project-panel-text-2;
    }
}

.sidebar-selection {
    background: url("images/active_back.png") no-repeat top right;
    height: 22px;
    position: absolute;
}

.sidebar-selection-triangle {
    background: url("images/active_back.png");
    width: 9px; /* quiet scrollbar width */
    height: 22px;
    position: fixed;

    z-index: @z-index-brackets-selection-triangle; /* scroller-shadow appears above this triangle */
}

.sidebar-selection-triangle.triangle-visible:before {
    content: "";

    border-top: @sidebar-triangle-size solid transparent;
    border-bottom: (@sidebar-triangle-size - 1) solid transparent;
    border-left: @sidebar-triangle-size solid #2D2E30;

    display: block;
    position: absolute;
    top: -1px;
    right: -9px;
    width: 0;
    height: 0;

    .scale-x(0.8, right, top);
}

//Initially start with the open files hidden, they will get show as files are added
#open-files-container {
    display:none;
}

#project-files-container {
    .box-flex(1);

    .jstree-brackets li > a {
        padding-right: (@sidebar-triangle-size * 2);
    }

    ul {
        padding-left: 8px;
    }

    > ul {
        padding-bottom: 24px;
    }
}

.scroller-shadow {
    background-size: 100%;
    background-repeat: no-repeat;
    height: 5px;
    position: fixed;
    z-index: @z-index-brackets-scroller-shadow;

    &.top {
        #gradient > .vertical(rgba(0,0,0,0.1), rgba(0,0,0,0));
        background-position: 0 -5px;
        background-color: transparent; /* override background-color: @endColor from #gradient.vertical */
    }

    &.bottom {
        #gradient > .vertical(rgba(0,0,0,0), rgba(0,0,0,0.1));
        background-position: 0 5px;
        background-color: transparent; /* override background-color: @endColor from #gradient.vertical */
    }
}


@jstree-sprite-size: 18px;  // this is hardcoded in jsTree's JS code

/** Classes for icons from jsTreeSprites.svg
*/
.jstree-sprite {
    background-image: url("images/jsTreeSprites.svg");
    background-repeat: no-repeat;
    background-color: transparent;
    vertical-align: middle;
    width: @jstree-sprite-size;
    height: @jstree-sprite-size;
}

/** Overriding jsTreeTheme.less
*/
.jstree-brackets .jstree-no-dots .jstree-open > ins {
    background-position: 7px -8px;
    -webkit-transform: translateZ(0) rotate(90deg);
    -webkit-filter: drop-shadow(1px 0 1px rgba(0, 0, 0, 0.36));
}

.jstree-brackets .jstree-no-dots .jstree-closed > ins {
    background-position: 7px -8px;
    -webkit-transform: translateZ(0); /* Need this to make sure that the svg isn't blurry on retina. */
    -webkit-filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.36));
}

/** Classes for icons from bracketSprites.png
*/
.bracket-sprite {
    background-image: url("images/close_btn.svg");
    background-repeat: no-repeat;
    background-color: transparent;
    vertical-align: middle;
    width: 15px;
    height: 16px;
}


.file-status-icon {
    margin: 2px 0 0 8px;
    .bracket-sprite;
    display: inline-block;
    position: absolute;
    left: 0px;
    top: 1px;

    &.dirty {
        background-position: -30px 1px;
    }

    &.can-close {
        background-position: 0 0;
    }

    &.can-close:hover {
        background-position: -15px 0;
    }

    &.can-close:active {
        background-position: -15px 0;
        opacity: @tc-icon-down;
    }
}

/* Styles for inline editors */

.inline-text-editor {
    line-height: 0px;
}

.inline-widget {
    position: relative;
    overflow: hidden;

    background-color: @tc-lighter-gray;
    min-width: 250px;
    cursor: default;
    
    &.animating {
        // Make the animation use the GPU--especially important for retina.
        -webkit-transform: translateZ(0);
        transform: translateZ(0);

        transition: height 250ms cubic-bezier(0, 1.02, 0.6, 1);
    }

    .CodeMirror {
        /* remove CodeMirror default height: 300px */
        height: auto;
    }

    .inline-text-editor {
        white-space: nowrap;
    }

    .inline-editor-header {
        display: inline-block;
        padding: 10px 10px 0px 40px;

        .filename {
            vertical-align: middle;
            font-family: @sansFontFamily;
            font-size: 13px;
            color: @bc-black;

            // Filename header is clickable (it's an <a> tag, so we get underscore on hover by
            // default; but the hand cursor is shut off by Bootstrap's reset stylesheet)
            cursor: pointer;

            .dirty-indicator {
                .bracket-sprite;
                display: inline-block;
                background-position: -32px 2px;
                padding-top: 5px;
            }

            .line-number {
                color: @inline-color-2;
            }
        }
    }
    
    .shadow {
        display: block;
        height: 4px;
        width: 100%;
        position: absolute;
        content: " ";
        left: 0;
        z-index: @z-index-brackets-inline-editor-shadow;
    }

    .shadow.top {
        top: 0px;
        background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));
    }

    .shadow.bottom {
        bottom: 0px;
        background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.1));
    }

    .CodeMirror-scroll {
        background-color: transparent;

        .CodeMirror-linenumbers {
            background-color: @tc-lighter-gray;
        }
    }

    .close {
        position: absolute;
        left: 15px;
        top: 10px;
        margin-right: 30px;
    }

}

/* CSSInlineEditor rule list */
.related-container {
    @top-margin: 12px;

    float: right;
    position: relative;
    min-height: 100%;
    font-family: @sansFontFamily;
    width: 250px;
    max-width: 50%;
    overflow: hidden;
    background: @inline-background-color-2;
    
    // Without this, the "New Rule" button shows on top of the rule list if you resize
    // the window narrow enough. No idea why, since there's no z-index on the button, and
    // the other items in the header go behind the rule list.
    z-index: 1;

    .selection {
        width: 100%;
        background: #d0d5d5;
        position: absolute;
        border-top: 1px solid darken(@inline-background-color-3, @bc-color-step-size);
        border-bottom: 1px solid lighten(@inline-background-color-3, @bc-color-step-size);
        top: @top-margin;

        &.animate {
            transition: top 0.1s ease-out;
        }
    }

    /*
     * CSS triangle hack with anti-alias workarounds:
     * (a) Use selection-background-color instead of transparent.
     * (b) Use transform scaleX and origin to adjust width.
     */
    .selection:before {
        content: " ";
        position: absolute;
        width: 0;
        height: 0;
        border-top: @inline-triangle-size solid @inline-background-color-3;
        border-bottom: @inline-triangle-size solid @inline-background-color-3;
        border-left: @inline-triangle-size solid @inline-background-color-1;
        margin-top: -@inline-triangle-size;
        top: 50%;
        .scale-x(0.9, left, top);
    }

    .related {
        font-size: 12px;
        position: absolute;
        top: 0;
        left: 1px;
        width: 100%;

        ul {
            margin: 0;
            padding: @top-margin 0px;
            list-style: none;
        }

        li {
            color: @tc-emphasized-text;
            margin: 0;
            overflow: hidden;
            padding: 2px 0px 2px 15px;
            text-overflow: ellipsis;
            white-space: nowrap;
            
            .related-file {
                color: @tc-input-placeholder-text;
            }
        }

        .selected {
            color: @tc-light-weight-text;
            transition: color 0.1s ease-out .15s;
        }
    }
}

.inline-editor-message {
    color: @tc-input-placeholder-text;
    font-family: @sansFontFamily;
    font-size: 12px;
    line-height: 17px;
    height: 20px;
    padding: 10px 0 40px 50px;
}

/* This text is used to force the code editor's font to be loaded early on if it's a
   web font. This is necessary in order for the editor's horizontal measurement of text
   to work properly.

   In the future, when we allow the user to switch fonts, we'll need to make sure to
   update the font for this text item whenever the user switches. We'll also need to
   wait to initiate a re-measure in CodeMirror until the new font is loaded (if they
   choose a web font). This library allows for checking if a web font is loaded:

     http://code.google.com/apis/webfonts/docs/webfont_loader.html
*/
.dummy-text {
    position: fixed;
    top: -10000px;
    .code-font();
}

.platform-mac .dummy-text {
    .code-font-mac();
}

/* Find in Files results panel - temporary UI, to be replaced with a richer search feature later */

#search-results .title, #replace-all-results .title {
    .sane-box-model;
    padding-right: 20px;
    width: 100%;
    line-height: 25px;

    .flex-box;
    .contracting-col {
        .flex-item(0);
        min-width: 1px;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .fixed-col {
        .flex-item(0, 0);
    }
    .pagination-col {
        .flex-item(1, 0);
        min-width: 100px;
    }
    .replace-col {
        .flex-item(1, 0);
        min-width: 120px;
        padding: 0 15px;
    }
    .first-page,
    .prev-page,
    .next-page,
    .last-page {
        .jstree-sprite;
        width: 6px;
        display: inline-block;
        margin: 0 2px;
        background-position: 0px 4px;
    }
    .first-page {
        background-position: 0px -80px;
        margin-left: 10px;
    }
    .prev-page {
        background-position: 0px -24px;
    }
    .last-page {
        background-position: 0px -52px;
    }
    .disabled {
        opacity: 0.3;
    }
}

#search-results .disclosure-triangle {
    .jstree-sprite;
    display: inline-block;
    &.expanded {
        // Unfortunately, the way jsTree sprites are aligned within their 18px boxes doesn't look good in
        // other contexts, so we need some tweaks here instead of straight multiples of @jstree-sprite-size
        background-position: 7px 5px;
        -webkit-transform: translateZ(0) rotate(90deg);
    }
    &.collapsed {
        background-position: 7px 5px;
    }
}

/* Modal bar for Find/Quick Open */

.modal-bar {
    display: block;
    text-align: left;

    font-family: @sansFontFamily;
    font-size: 14px;
    color: @tc-text;
    background: @tc-gray-panel;
    overflow: hidden;
    padding: 5px 4px 4px 14px;

    -webkit-transform: translate(0, 0); // Prefix still required.
    transition: -webkit-transform 66ms cubic-bezier(0, 0.62, 0.04, 0.99);
    z-index: @z-index-brackets-modalbar;

    body.in-browser &,
    body:not(.has-appshell-menus) & {
        // Separator line between us and the HTML menu/titlebar above
        border-top: 1px solid darken(@background-color-3, @bc-color-step-size);
    }
    
    &.popout {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
    }
    
    &.offscreen {
        -webkit-transform: translate(0, -44px);
        transform: translate(0, -44px);
        transition: -webkit-transform 266ms cubic-bezier(0, 0.56, 0, 1);
        transition: transform 266ms cubic-bezier(0, 0.56, 0, 1);
    
        body:not(.has-appshell-menus) & {
            top: 37px;
        }
    }

    input {
        font-family: @sansFontFamily;
        outline: none;
        width: 20em;
        margin: 5px 5px 0;
        position: relative;
        top: -3px;
        &.no-results {
            border: 1px solid #bc0023;
            box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0.12), 0 0 0 2px rgba(255, 0, 120, 0.5);
        }
    }

    .message {
        display: inline-block;
    }

    .error {
        display: none;
    
        .alert {
            padding-top: 4px;
            padding-bottom: 4px;
        }
    }

    .navigator {
        display: none;
        button {
            margin: 2px 1px 3px;
        }
    }
}

// Search result highlighting - CodeMirror highlighting is pretty constrained. Highlights are
// blended on TOP of the selection color. The "current" search result is indicated by selection,
// so we want the selection visible underneath the highlight. To do this, the highlight must be
// transparent; it has to look good atop both the selection color AND the regular text bg color.
.CodeMirror-searching {
    // Highlight color, overlaid on top of the .find-highlighting color
    background-color: @cm-match-highlight;
    border-radius: @tc-inline-border-radius;
    box-shadow: @tc-small-shadow-bottom;
    color: @match-text !important;
}
.CodeMirror.find-highlighting div.CodeMirror-selected,
.CodeMirror .CodeMirror.find-highlighting div.CodeMirror-selected {
    // Selection color while highlighting shown - ALWAYS has the .CodeMirror-searching color
    // blended atop it.
    // Note: the 2nd selector reflecting CM nesting is needed to override the similar rules in
    // brackets_codemirror_override.less (see the note about #324).
    background: @cm-current-match-highlight;
    border-radius: @tc-inline-border-radius;
}
#find-counter {
    font-weight: @font-weight-semibold;
    padding: 0 5px;
}

.tickmark-track {
    position: absolute;
    bottom: 0;
    top: 0;
    right: 0;
    width: 16px;
    z-index: @z-index-cm-max;
    pointer-events: none;
    
    .tickmark {
        position: absolute;
        width: 16px;
        body.platform-mac & { width: 15px; }
        
        height: 1px;
        background-color: #eddd23;
        border-top: 1px solid #e0d123;
        border-bottom: 1px solid #d4c620;
        opacity: 0.85;  // allow thumb to show through
    }
}


/* Quick Open search bar & dropdown */

.smart_autocomplete_container {

    // the borders show up even if the container is empty, must set height to zero using JS.
    border: 1px solid @tc-gray-panel-border;

    background-color: @tc-gray-panel;
    border-radius: 0 0 4px 4px;
    box-shadow: @tc-normal-shadow-bottom;

    // so that border won't show when height is 0.
    box-sizing: border-box;

    // using this to fix the spacing that breaks item seperators and had to use !important to override inline css
    width: 434px !important;

    /* smart auto complete doesn't correctly position the container
     * so these specific padding and margin values are necessary*/
    padding: 0px;
    margin: 9px 0 0;

    .quick-open-path {
        color: #666;
        font-size: 11px;
        letter-spacing: 0.04em;
        line-height: 11px;
    }

    li {
        color: #222;
        line-height: 15px;
        list-style: none;
        cursor: default;
        padding: 6px 10px;
        
        &:nth-child(odd) {
            background-color: @tc-lighter-gray;
        }
        
        &:hover {
            background-color: @tc-hover-highlight;
        }

        &.smart_autocomplete_highlight {
            background-color: @tc-highlight;
        }
    }
}

.quicksearch-pathmatch,
.quicksearch-namematch {
    font-weight: @font-weight-semibold;
}

.quicksearch-pathmatch {
    color: #555;
}


/* Spinner */

.spinner {
    display: inline-block;
    vertical-align: middle;
    margin-top: -2px;
    width: 12px;
    height: 12px;
    background: url("images/spinner_small_sprites12.png") no-repeat;
    visibility: hidden;

    &.spin {
        -webkit-animation: spinner-sprites-12 1.2s steps(10) infinite;
        visibility: visible;
    }

    &.large {
        width: 36px;
        height: 36px;
        margin-top: 0;
        background: url("images/spinner_large_sprites36.png") no-repeat;

        &.spin {
            -webkit-animation: spinner-sprites-36 1.2s steps(10) infinite;
        }
    }
}
// Retina versions
@media only screen and (-webkit-min-device-pixel-ratio: 2),
       only screen and (min-device-pixel-ratio: 2) {
    .spinner {
        background-image: url("images/spinner_small_sprites12@2x.png");
        background-size: 120px 12px;

        &.large {
            background: url("images/spinner_large_sprites36@2x.png") no-repeat;
            background-size: 360px 36px;
        }
    }
}


/* Problems panel & CodeInspection status bar indicator */

#status-indicators #status-inspection {
    border: none;
    cursor: default;
    width: 13px;
}

.inspection-disabled {
    background: url(images/topcoat-inactive-15.svg) 9px 5px no-repeat;
}

.inspection-errors {
    background: url(images/topcoat-warning-15.svg) 9px 5px no-repeat;
}

.inspection-errors:hover {
    background-color: rgba(0, 0, 0, 0.03);
}

.inspection-errors:active {
    background-color: rgba(0, 0, 0, 0.05);
}

.inspection-valid {
    background: url(images/topcoat-okay-15.svg) 9px 5px no-repeat;
}

#problems-panel {
    .user-select(text);  // allow selecting error messages for easy web searching
    .line {
        text-align: right;  // make line number line up with editor line numbers
    }
}


/* Line up label text and input text */
label input {
    position: relative;
    top: -2px;
}

/* Live Preview */
.live-preview-sync-error .CodeMirror-linenumber {
    background-color: @live-preview-sync-error-background;
    color: @live-preview-sync-error-color;
}
